{"version":3,"sources":["Task.jsx","CreateTaskInput.jsx","tasksGateway.js","TasksList.jsx","TodoList.jsx","App.jsx","index.js"],"names":["Task","id","text","done","onChange","handleTaskDelete","taskClasses","classNames","className","type","defaultChecked","onClick","defaultProps","CreateTaskInput","state","value","getValue","event","setState","target","handleTaskCreate","props","onCreate","this","placeholder","Component","baseUrl","fetchTasksList","fetch","then","res","ok","json","createTask","newTask","method","headers","body","JSON","stringify","response","Error","onChangeTask","updatedTask","onDeleteTask","TasksList","tasks","fetchTasks","tasksList","handleTaskOnChange","changedTask","find","task","sortedTasks","sort","a","b","map","key","TodoList","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.610073e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Task = ({id, text, done, onChange, handleTaskDelete}) => {\r\n  const taskClasses = classNames('list-item', {'list-item_done': done});\r\n  return (\r\n    <li className={taskClasses}>\r\n      <input \r\n        type=\"checkbox\"\r\n        className=\"list-item__checkbox\"\r\n        defaultChecked={done}\r\n        onChange={() => onChange(id)} \r\n      />\r\n      <span className=\"list-item__text\">{text}</span>\r\n      <button className=\"list-item__delete-btn\" onClick={() => handleTaskDelete(id)}></button>\r\n    </li>\r\n  );\r\n};\r\nexport default Task;\r\n\r\nTask.propTypes = {\r\n  text: PropTypes.string,\r\n  done: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  handleTaskDelete: PropTypes.func.isRequired,\r\n};\r\nTask.defaultProps = {\r\n  text: '',\r\n  done: false,\r\n};","import React, { Component } from 'react';\r\n\r\nclass CreateTaskInput extends Component{\r\n  state = {\r\n    value: '',\r\n  };\r\n  getValue = event => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  handleTaskCreate = () => {\r\n    this.props.onCreate(this.state.value);\r\n    this.setState({\r\n      value:''\r\n    });\r\n  };\r\n  render(){\r\n    return (\r\n      <div className=\"create-task\">\r\n        <input \r\n          className=\"create-task__input\"\r\n          type=\"text\" value={this.state.value}\r\n          onChange={this.getValue} \r\n          placeholder=\"create your task\"\r\n        />\r\n        <button className=\"btn create-task-btn\" onClick={this.handleTaskCreate}>Create</button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default CreateTaskInput;","const baseUrl = 'https://5e517090f2c0d300147c07c9.mockapi.io/api/v1/tasks';\r\n\r\nexport const fetchTasksList = () => {\r\n  return fetch(baseUrl)\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    });\r\n};\r\n\r\nexport const createTask = newTask => {\r\n  return fetch(baseUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': \"application/json;charset=utf-8\"\r\n    },\r\n    body: JSON.stringify(newTask),\r\n  })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create task');\r\n      }\r\n    });\r\n};\r\n\r\nexport const onChangeTask = (updatedTask, id) => {\r\n  return fetch(`${baseUrl}/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': \"application/json;charset=utf-8\"\r\n    },\r\n    body: JSON.stringify(updatedTask),\r\n  })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create task');\r\n      }\r\n    });\r\n}\r\n\r\nexport const onDeleteTask = id => {\r\n  return fetch(`${baseUrl}/${id}`, {\r\n    method: \"DELETE\"\r\n  })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create task');\r\n      }\r\n    });\r\n};","import React, { Component } from 'react';\r\nimport Task from './Task';\r\nimport CreateTaskInput from './CreateTaskInput';\r\nimport { fetchTasksList, createTask, onChangeTask, onDeleteTask } from './tasksGateway';\r\n\r\n\r\nclass TasksList extends Component {\r\n  state = {\r\n    tasks: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTasks();\r\n  }\r\n\r\n  fetchTasks = () => {\r\n    fetchTasksList()\r\n      .then(tasksList => {\r\n        this.setState({\r\n          tasks: tasksList\r\n        });\r\n      });\r\n  };\r\n\r\n  onCreate = text => {\r\n    const newTask = {\r\n      text,\r\n      done: false,\r\n    };\r\n    createTask(newTask)\r\n      .then(() => this.fetchTasks());\r\n  };\r\n\r\n  handleTaskOnChange = id => {\r\n    const changedTask = this.state.tasks.find(task => task.id === id);\r\n    const { text, done } = changedTask;\r\n    const updatedTask = {\r\n      id,\r\n      text,\r\n      done: !done,\r\n    };\r\n    onChangeTask(updatedTask, id)\r\n      .then(() => this.fetchTasks());\r\n  };\r\n\r\n  handleTaskDelete = id => {\r\n    onDeleteTask(id)\r\n      .then(() => this.fetchTasks());\r\n  };\r\n\r\n  render() {\r\n    const sortedTasks = [...this.state.tasks]\r\n      .sort((a, b) => a.done - b.done);\r\n    return (\r\n      <main className=\"todo-list\">\r\n        <CreateTaskInput onCreate={this.onCreate} />\r\n        <ul className=\"list\">\r\n          {\r\n            sortedTasks.map(task =>\r\n              <Task\r\n                key={task.id}\r\n                {...task}\r\n                onChange={this.handleTaskOnChange}\r\n                handleTaskDelete={this.handleTaskDelete}\r\n              />)\r\n          }\r\n        </ul>\r\n      </main>\r\n    );\r\n  }\r\n};\r\nexport default TasksList;","import React from 'react';\r\nimport TasksList from './TasksList';\r\n\r\nconst TodoList = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Todo List</h1>\r\n      <TasksList />\r\n    </>\r\n  );\r\n};\r\nexport default TodoList;","import React from 'react';\r\nimport TodoList from './TodoList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <TodoList />\r\n  );\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);\r\n\r\n"],"sourceRoot":""}